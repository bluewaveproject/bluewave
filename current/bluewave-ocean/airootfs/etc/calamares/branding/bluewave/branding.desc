# SPDX-FileCopyrightText: no
# SPDX-License-Identifier: CC0-1.0
#
# Product branding information. This influences some global
# user-visible aspects of Calamares, such as the product
# name, window behavior, and the slideshow during installation.
#
# Additional styling can be done using the stylesheet.qss
# file, also in the branding directory.
---
componentName:  bluewave


### WELCOME / OVERALL WORDING
#
# These settings affect some overall phrasing and looks,
# which are most visible in the welcome page.

# This selects between different welcome texts. When false, uses
# the traditional "Welcome to the %1 installer.", and when true,
# uses "Welcome to the Calamares installer for %1." This allows
# to distinguish this installer from other installers for the
# same distribution.
welcomeStyleCalamares:   false

# Should the welcome image (productWelcome, below) be scaled
# up beyond its natural size? If false, the image does not grow
# with the window but remains the same size throughout (this
# may have surprising effects on HiDPI monitors).
welcomeExpandingLogo:   true

### WINDOW CONFIGURATION
#
# The settings here affect the placement of the Calamares
# window through hints to the window manager and initial
# sizing of the Calamares window.

# Size and expansion policy for Calamares.
#  - "normal" or unset, expand as needed, use *windowSize*
#  - "fullscreen", start as large as possible, ignore *windowSize*
#  - "noexpand", don't expand automatically, use *windowSize*
windowExpanding:    normal

# Size of Calamares window, expressed as w,h. Both w and h
# may be either pixels (suffix px) or font-units (suffix em).
#   e.g.    "800px,600px"
#           "60em,480px"
# This setting is ignored if "fullscreen" is selected for
# *windowExpanding*, above. If not set, use constants defined
# in CalamaresUtilsGui, 800x520.
windowSize: 1100px,520px

# Placement of Calamares window. Either "center" or "free".
# Whether "center" actually works does depend on the window
# manager in use (and only makes sense if you're not using
# *windowExpanding* set to "fullscreen").
windowPlacement: center

### PANELS CONFIGURATION
#
# Calamares has a main content area, and two panels (navigation
# and progress / sidebar). The panels can be controlled individually,
# or switched off. If both panels are switched off, the layout of
# the main content area loses its margins, on the assumption that
# you're doing something special.

# Kind of sidebar (panel on the left, showing progress).
#  - "widget" or unset, use traditional sidebar (logo, items)
#  - "none", hide it entirely
#  - "qml", use calamares-sidebar.qml from branding folder
# In addition, you **may** specify a side, separated by a comma,
# from the kind. Valid sides are:
#  - "left" (if not specified, uses this)
#  - "right"
#  - "top"
#  - "bottom"
# For instance, "widget,right" is valid; so is "qml", which defaults
# to putting the sidebar on the left. Also valid is "qml,top".
# While "widget,top" is valid, the widgets code is **not** flexible
# and results will be terrible.
sidebar: widget

# Kind of navigation (button panel on the bottom).
#  - "widget" or unset, use traditional navigation
#  - "none", hide it entirely
#  - "qml", use calamares-navigation.qml from branding folder
# In addition, you **may** specify a side, separated by a comma,
# from the kind. The same sides are valid as for *sidebar*,
# except the default is *bottom*.
navigation: widget


### STRINGS, IMAGES AND COLORS
#
# This section contains the "branding proper" of names
# and images, rather than global-look settings.

# These are strings shown to the user in the user interface.
# There is no provision for translating them -- since they
# are names, the string is included as-is.
#
# The four Url strings are the Urls used by the buttons in
# the welcome screen, and are not shown to the user. Clicking
# on the "Support" button, for instance, opens the link supportUrl.
# If a Url is empty, the corresponding button is not shown.
#
# bootloaderEntryName is how this installation / distro is named
# in the boot loader (e.g. in the GRUB menu).
#
# These strings support substitution from /etc/os-release
# if KDE Frameworks 5.58 are available at build-time. When
# enabled, @{var-name} is replaced by the equivalent value
# from os-release. All the supported var-names are in all-caps,
# and are listed on the FreeDesktop.org site,
#       https://www.freedesktop.org/software/systemd/man/os-release.html
# Note that ANSI_COLOR and CPE_NAME don't make sense here, and
# are not supported (the rest are). Remember to quote the string
# if it contains substitutions, or you'll get YAML exceptions.
#
# The *Url* entries are used on the welcome page, and they
# are visible as buttons there if the corresponding *show* keys
# are set to "true" (they can also be overridden).
strings:
    productName:         "Blue Wave"
    shortProductName:    Blue Wave Ocean
    version:             Rolling
    #shortVersion:        
    versionedName:       Blue Wave Ocean
    shortVersionedName:  Blue Wave Ocean
    bootloaderEntryName: Blue Wave
    #productUrl:          https://calamares.io/
    #supportUrl:          https://github.com/calamares/calamares/wiki
    #knownIssuesUrl:      https://github.com/calamares/calamares/issues
    #releaseNotesUrl:     https://calamares.io/news/
    #donateUrl:           https://kde.org/community/donations/index.php

images:
    # productBanner:       "banner.png"
    productIcon:         "install.png"
    productLogo:         "logo.png"
    # productWallpaper:    "wallpaper.png"
    productWelcome:      "icon.png"

style:
   SidebarBackground:    "#3B4252"
   SidebarText:          "#FFFFFF"
   SidebarTextSelect:    "#3B4252"
   SidebarTextCurrent: "#5E81AC"
   #sidebarTextHighlight: "#5E81AC" 
   #--strong orange
   #sidebarTextHighlight: "#9b870c"

### SLIDESHOW
#
# The slideshow is displayed during execution steps (e.g. when the
# installer is actually writing to disk and doing other slow things).

# The slideshow can be a QML file (recommended) which can display
# arbitrary things -- text, images, animations, or even play a game --
# during the execution step. The QML **is** abruptly stopped when the
# execution step is done, though, so maybe a game isn't a great idea.
#
# The slideshow can also be a sequence of images (not recommended unless
# you don't want QML at all in your Calamares). The images are displayed
# at a rate of 1 every 2 seconds during the execution step.
#
# To configure a QML file, list a single filename:
#   slideshow:               "show.qml"
# To configure images, like the filenames (here, as an inline list):
#   slideshow: [ "/etc/calamares/slideshow/0.png", "/etc/logo.png" ]
slideshow:               "show.qml"

# There are two available APIs for a QML slideshow:
#  - 1 (the default) loads the entire slideshow when the installation-
#      slideshow page is shown and starts the QML then. The QML
#      is never stopped (after installation is done, times etc.
#      continue to fire).
#  - 2 loads the slideshow on startup and calls onActivate() and
#      onLeave() in the root object. After the installation is done,
#      the show is stopped (first by calling onLeave(), then destroying
#      the QML components).
#
# An image slideshow does not need to have the API defined.
slideshowAPI: 2


